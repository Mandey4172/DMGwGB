#version 330 core

in vec3 oColor;
in vec3 oNormal;
in vec3 oTranslation;
in vec2 oTextCord;
in vec3 oLightPos;

out vec4 color;

uniform sampler2D texture[6];


void main()
{
	vec3 lightColor   =	vec3(1.0f,1.0f,1.0f);
	vec3 xlightPos = vec3(0.f,0.f,10.f);

	// ambient
	float ambientStrength = 0.1;
	vec3 ambient = ambientStrength * lightColor;

	// diffuse 
	vec3 norm = normalize(oNormal);
	vec3 lightDir = normalize(oLightPos - oTranslation);
	float diff = max(dot(norm, lightDir), 0.0);
	vec3 diffuse = diff * lightColor;
    
	//color = vec4(oColor, 1.f);
	//color = vec4(lightDir, 1.f);
	
	//color = vec4((ambient + diffuse), 1.f) * texture2D(texture[0], oTextCord);
	vec3 result = (ambient + diffuse) * oColor;
	color = vec4(result, 1.00f);
	//color = vec4(norm, 1.0f);
	//color = vec4(oTranslation, 1.00f);
	//color = vec4(oColor, 1.00f);
}
/*
	
*/
/*
	// ambient
    float ambientStrength = 0.05;
	//float ambientStrength = length(oLightPos - oTranslation) / length(oLightPos);
	vec3 lightColor = vec3(1.f, 1.f, 1.f);
    vec3 ambient = ambientStrength * lightColor;
  	
	
    // diffuse 
    vec3 norm = normalize(oNormal);
    vec3 lightDir = normalize(oLightPos - oTranslation);
    float diff = max(dot(norm, lightDir), 0.0);
	
    vec3 diffuse = diff * lightColor;
    diffuse= clamp(diffuse, 0.0, 1.0);

    vec3 result = (ambient + diffuse) * oColor;
	//vec3 result = oColor;

	//vec3 result = ambient * oColor;

    color = vec4(result, 1.0);
*/
/*
	
*/