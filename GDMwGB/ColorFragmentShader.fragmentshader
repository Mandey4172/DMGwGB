#version 330 core

in vec3 oColor;
in vec3 oNormal;
in vec3 oTranslation;

out vec4 color;

uniform vec3 lightPos;

void main()
{
	vec3 oTranslation = vec3(0.0f,0.0f,0.0f);
	vec3 lightColor   =	vec3(1.0f,1.0f,1.0f);
	
	// ambient
	float ambientStrength = 0.1;
	vec3 ambient = ambientStrength * lightColor;
  	
	// diffuse 
	vec3 norm = normalize(oNormal);
	vec3 lightDir = normalize(lightPos - oTranslation);
	float diff = max(dot(norm, lightDir), 0.0);
	vec3 diffuse = diff * lightColor;
    
	vec3 result = (ambient + diffuse) * oColor;
	color = vec4(result, 1.00f);
}
